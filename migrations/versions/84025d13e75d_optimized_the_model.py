"""Optimized the Model

Revision ID: 84025d13e75d
Revises: 2002d8aa3721
Create Date: 2025-04-21 12:35:12.568191

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa
from sqlalchemy.dialects import postgresql

# revision identifiers, used by Alembic.
revision: str = '84025d13e75d'
down_revision: Union[str, None] = '2002d8aa3721'
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('admins',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_admins_id'), 'admins', ['id'], unique=False)
    op.create_table('hr_managers',
    sa.Column('id', sa.Integer(), nullable=False),
    sa.Column('name', sa.String(), nullable=False),
    sa.Column('email', sa.String(), nullable=False),
    sa.Column('role', sa.String(), nullable=False),
    sa.PrimaryKeyConstraint('id'),
    sa.UniqueConstraint('email')
    )
    op.create_index(op.f('ix_hr_managers_id'), 'hr_managers', ['id'], unique=False)
    op.add_column('applicants', sa.Column('role', sa.String(), nullable=False))
    op.add_column('applicants', sa.Column('date_created', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.drop_column('applicants', 'phone')
    op.drop_column('applicants', 'designation')
    op.drop_column('applicants', 'total_experience')
    op.drop_column('applicants', 'skills')
    op.add_column('candidate_evaluations', sa.Column('hr_manager_id', sa.Integer(), nullable=True))
    op.add_column('candidate_evaluations', sa.Column('suitability_score', sa.Float(), nullable=False))
    op.add_column('candidate_evaluations', sa.Column('comments', sa.Text(), nullable=True))
    op.create_foreign_key(None, 'candidate_evaluations', 'hr_managers', ['hr_manager_id'], ['id'], ondelete='SET NULL')
    op.drop_column('candidate_evaluations', 'score')
    op.add_column('job_descriptions', sa.Column('admin_id', sa.Integer(), nullable=True))
    op.add_column('job_descriptions', sa.Column('required_skills', sa.JSON(), nullable=True))
    op.add_column('job_descriptions', sa.Column('posted_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.create_foreign_key(None, 'job_descriptions', 'admins', ['admin_id'], ['id'], ondelete='SET NULL')
    op.drop_column('job_descriptions', 'location')
    op.drop_column('job_descriptions', 'date_created')
    op.drop_column('job_descriptions', 'skills')
    op.drop_column('job_descriptions', 'status')
    op.add_column('resumes', sa.Column('file_path', sa.String(), nullable=False))
    op.add_column('resumes', sa.Column('upload_date', sa.DateTime(), server_default=sa.text('now()'), nullable=True))
    op.add_column('resumes', sa.Column('parsed_status', sa.String(), nullable=False))
    op.drop_constraint('resumes_job_id_fkey', 'resumes', type_='foreignkey')
    op.drop_column('resumes', 'job_id')
    op.drop_column('resumes', 'file_url')
    op.drop_column('resumes', 'text_content')
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.add_column('resumes', sa.Column('text_content', sa.TEXT(), autoincrement=False, nullable=True))
    op.add_column('resumes', sa.Column('file_url', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('resumes', sa.Column('job_id', sa.INTEGER(), autoincrement=False, nullable=True))
    op.create_foreign_key('resumes_job_id_fkey', 'resumes', 'job_descriptions', ['job_id'], ['id'], ondelete='CASCADE')
    op.drop_column('resumes', 'parsed_status')
    op.drop_column('resumes', 'upload_date')
    op.drop_column('resumes', 'file_path')
    op.add_column('job_descriptions', sa.Column('status', sa.VARCHAR(), autoincrement=False, nullable=False))
    op.add_column('job_descriptions', sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('job_descriptions', sa.Column('date_created', postgresql.TIMESTAMP(), server_default=sa.text('now()'), autoincrement=False, nullable=False))
    op.add_column('job_descriptions', sa.Column('location', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_constraint(None, 'job_descriptions', type_='foreignkey')
    op.drop_column('job_descriptions', 'posted_date')
    op.drop_column('job_descriptions', 'required_skills')
    op.drop_column('job_descriptions', 'admin_id')
    op.add_column('candidate_evaluations', sa.Column('score', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=False))
    op.drop_constraint(None, 'candidate_evaluations', type_='foreignkey')
    op.drop_column('candidate_evaluations', 'comments')
    op.drop_column('candidate_evaluations', 'suitability_score')
    op.drop_column('candidate_evaluations', 'hr_manager_id')
    op.add_column('applicants', sa.Column('skills', postgresql.JSON(astext_type=sa.Text()), autoincrement=False, nullable=True))
    op.add_column('applicants', sa.Column('total_experience', sa.DOUBLE_PRECISION(precision=53), autoincrement=False, nullable=True))
    op.add_column('applicants', sa.Column('designation', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.add_column('applicants', sa.Column('phone', sa.VARCHAR(), autoincrement=False, nullable=True))
    op.drop_column('applicants', 'date_created')
    op.drop_column('applicants', 'role')
    op.drop_index(op.f('ix_hr_managers_id'), table_name='hr_managers')
    op.drop_table('hr_managers')
    op.drop_index(op.f('ix_admins_id'), table_name='admins')
    op.drop_table('admins')
    # ### end Alembic commands ###
